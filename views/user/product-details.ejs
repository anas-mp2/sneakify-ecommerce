<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= product.name %> - Shoe Store</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
        }

        /* Navbar Styles (consistent with shop.ejs) */
        .navbar {
            background-color: #333;
            overflow: hidden;
            padding: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo img {
            width: 70px;
            height: 70px;
            margin-left: 30px;
        }

        .nav-items {
            display: flex;
            align-items: center;
            margin-left: auto;
        }

        .nav-items a {
            color: white;
            padding: 14px 20px;
            text-decoration: none;
        }

        .nav-items a:hover {
            background-color: #ddd;
            color: black;
        }

        .search {
            display: flex;
            align-items: center;
            margin-left: 10px;
        }

        .search input {
            padding: 5px;
            margin-right: 5px;
            border-radius: 5px;
            border: 1px solid #ccc;
        }

        .search button {
            padding: 6px;
            border-radius: 5px;
            background-color: #DB4444;
            color: white;
            border: none;
            cursor: pointer;
        }

        .search button:hover {
            background-color: #DB4444;
        }

        /* Breadcrumbs */
        .breadcrumbs {
            margin: 20px 0;
        }

        .breadcrumb-item a {
            color: #007bff;
            text-decoration: none;
        }

        .breadcrumb-item a:hover {
            text-decoration: underline;
        }

        /* Product Details Section */
        .product-details {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-bottom: 20px;
        }

        .product-details img {
            max-height: 400px;
            object-fit: cover;
            border-radius: 8px;
            margin: 0 auto;
            display: block;
        }

        .product-details h2 {
            font-size: 2rem;
            margin-bottom: 10px;
        }

        .product-details .text-muted {
            font-size: 1rem;
            margin-bottom: 15px;
        }

        /* Ratings */
        .star-rating {
            color: #ffc107;
            margin-bottom: 15px;
        }

        .star-rating span {
            margin-left: 5px;
            color: #666;
        }

        /* Price and Discount */
        .price-section {
            margin-bottom: 20px;
        }

        .original-price {
            text-decoration: line-through;
            color: #666;
            font-size: 1.2rem;
            margin-right: 10px;
        }

        .discount-price {
            color: #DB4444;
            font-weight: bold;
            font-size: 1.5rem;
        }

        .badge {
            font-size: 0.9rem;
            margin-left: 10px;
        }

        /* Stock Status */
        .stock-status {
            margin-bottom: 20px;
            font-size: 1rem;
        }

        .stock-low {
            color: #DB4444;
            font-weight: bold;
        }

        .stock-out {
            color: #666;
            font-weight: bold;
        }

        .text-success {
            font-weight: bold;
        }

        /* Add to Cart Button */
        .btn-primary {
            background-color: #DB4444;
            border-color: #DB4444;
            padding: 10px 20px;
            font-size: 1rem;
        }

        .btn-primary:hover {
            background-color: #c82333;
            border-color: #c82333;
        }

        .btn-primary.disabled {
            background-color: #ccc;
            border-color: #ccc;
            cursor: not-allowed;
        }

        /* Highlights */
        .highlights {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
            margin-top: 20px;
        }

        .highlights h5 {
            font-size: 1.25rem;
            margin-bottom: 10px;
        }

        .highlights ul {
            padding-left: 20px;
        }

        .highlights li {
            margin-bottom: 5px;
            color: #333;
        }

        /* Reviews Section */
        .reviews-section {
            margin-top: 40px;
        }

        .reviews-section h4 {
            font-size: 1.5rem;
            margin-bottom: 20px;
        }

        .reviews-section .card {
            border: 1px solid #ddd;
            border-radius: 8px;
            margin-bottom: 15px;
        }

        .reviews-section .card-body {
            padding: 15px;
        }

        .reviews-section .card-text {
            margin: 10px 0;
            color: #333;
        }

        .reviews-section .text-muted {
            font-size: 0.9rem;
        }

        /* Review Form Styling */
        .review-form {
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
        }

        /* Related Products Section */
        .related-products {
            margin-top: 40px;
        }

        .related-products h4 {
            font-size: 1.5rem;
            margin-bottom: 20px;
        }

        .product-card {
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 15px;
            text-align: center;
            transition: transform 0.2s;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .product-card:hover {
            transform: scale(1.05);
        }

        .product-card img {
            max-height: 150px;
            object-fit: cover;
            border-radius: 8px;
            margin: 0 auto;
        }

        .product-card h6 {
            font-size: 1.1rem;
            margin: 10px 0;
        }

        .product-card p {
            color: #666;
            margin: 5px 0;
        }

        /* Footer Styles (consistent with shop.ejs) */
        footer {
            background-color: #333;
            color: white;
            padding: 40px 80px;
            font-family: Arial, sans-serif;
        }

        .footer-container {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            align-items: flex-start;
        }

        .footer-section {
            width: 18%;
            display: flex;
            flex-direction: column;
            align-items: start;
        }

        .footer-section h3 {
            font-size: 18px;
            margin-bottom: 10px;
        }

        .footer-section p {
            font-size: 14px;
            margin: 5px 0;
        }

        .subscribe-box {
            display: flex;
            align-items: center;
            max-width: 250px;
            border: 1px solid white;
            color: white;
            padding: 5px;
        }

        .subscribe-box input {
            flex: 1;
            background: none;
            border: none;
            outline: none;
            color: white;
            padding: 10px;
        }

        .subscribe-box button {
            background: none;
            border: none;
            color: white;
            cursor: pointer;
            padding: 10px 15px;
        }

        .imgdiv {
            padding-left: 6px;
            padding-top: 7px;
        }

        #qr-img {
            width: 60px;
            height: 60px;
        }

        #googleplay-img, #appstore-img {
            height: 20px;
            width: 60%;
        }

        .qr-container {
            display: flex;
            flex-direction: row;
            align-items: start;
        }

        .qr-container img {
            width: 100px;
            margin-bottom: 5px;
        }

        .social-icons {
            margin-top: 10px;
            display: flex;
            gap: 10px;
        }

        .social-icons i {
            font-size: 20px;
            cursor: pointer;
            margin-top: 15px;
            margin-left: 7px;
        }

        .footer-bottom {
            text-align: center;
            padding-top: 20px;
            font-size: 12px;
            border-top: 1px solid white;
            margin-top: 20px;
        }
    </style>
</head>
<body>
    <%- include('../partials/user/header') %>

    <div class="container my-5">
        <!-- Check if product is blocked or unavailable on page load -->
        <% if (!product || product.isBlocked) { %>
            <script>
                window.location.href = '/products?error=Product+is+blocked+or+unavailable';
            </script>
        <% } else { %>

        <!-- Breadcrumbs -->
        <nav class="breadcrumbs">
            <ol class="breadcrumb">
                <% breadcrumbs.forEach((crumb, index) => { %>
                    <li class="breadcrumb-item <%= !crumb.url ? 'active' : '' %>">
                        <% if (crumb.url) { %>
                            <a href="<%= crumb.url %>"><%= crumb.name %></a>
                        <% } else { %>
                            <%= crumb.name %>
                        <% } %>
                    </li>
                <% }) %>
            </ol>
        </nav>

        <!-- Product Details -->
        <div class="product-details row">
            <div class="col-md-6">
                <img src="<%= product.images[0] %>" alt="<%= product.name %>" class="img-fluid rounded">
            </div>
            <div class="col-md-6">
                <h2><%= product.name %></h2>
                <p class="text-muted"><%= product.brand %></p>
                
                <!-- Interactive Ratings -->
                <div class="star-rating">
                    <% for(let i = 1; i <= 5; i++) { %>
                        <i class="fa<%= i <= Math.round(avgRating) ? 's' : 'r' %> fa-star" 
                           onclick="rateProduct(<%= i %>, '<%= product._id %>')"
                           style="cursor: pointer;"></i>
                    <% } %>
                    <span>(<%= product.reviews.length %> reviews)</span>
                </div>

                <!-- Price and Discount -->
                <div class="price-section">
                    <% if (product.discount > 0) { %>
                        <span class="original-price">₹<%= product.price %></span>
                        <span class="discount-price">
                            ₹<%= Math.round(product.price * (1 - product.discount/100)) %>
                        </span>
                        <span class="badge bg-success"><%= product.discount %>% OFF</span>
                    <% } else { %>
                        <span class="discount-price">₹<%= product.price %></span>
                    <% } %>
                </div>

                <!-- Stock Status -->
                <div class="stock-status">
                    <% if (product.stock === 0) { %>
                        <span class="stock-out">Out of Stock</span>
                    <% } else if (product.stock <= 5) { %>
                        <span class="stock-low">Only <%= product.stock %> left in stock!</span>
                    <% } else { %>
                        <span class="text-success">In Stock (<%= product.stock %> available)</span>
                    <% } %>
                </div>

                <!-- Add to Cart Button -->
                <button 
                    class="btn btn-primary <%= product.stock === 0 ? 'disabled' : '' %>"
                    onclick="addToCart('<%= product._id %>')"
                >
                    <%= product.stock === 0 ? 'Sold Out' : 'Add to Cart' %>
                </button>

                <!-- Highlights -->
                <div class="highlights">
                    <h5>Product Highlights</h5>
                    <ul>
                        <% product.highlights.forEach(highlight => { %>
                            <li><%= highlight %></li>
                        <% }) %>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Reviews Section with Submission Form -->
        <div class="reviews-section">
            <h4>Customer Reviews</h4>
            <% if (product.reviews.length > 0) { %>
                <% product.reviews.forEach(review => { %>
                    <div class="card">
                        <div class="card-body">
                            <div class="star-rating">
                                <% for(let i = 1; i <= 5; i++) { %>
                                    <i class="fa<%= i <= review.rating ? 's' : 'r' %> fa-star"></i>
                                <% } %>
                            </div>
                            <p class="card-text"><%= review.comment %></p>
                            <p class="text-muted"><%= review.date.toLocaleDateString() %></p>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <p>No reviews yet.</p>
            <% } %>

            <!-- Review Submission Form -->
            <div class="review-form">
                <h5>Submit Your Review</h5>
                <form id="reviewForm" onsubmit="submitReview(event, '<%= product._id %>')">
                    <div class="mb-3">
                        <label for="rating" class="form-label">Rating</label>
                        <select class="form-select" id="rating" name="rating" required>
                            <option value="">Select Rating</option>
                            <option value="1">1 Star</option>
                            <option value="2">2 Stars</option>
                            <option value="3">3 Stars</option>
                            <option value="4">4 Stars</option>
                            <option value="5">5 Stars</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="comment" class="form-label">Comment</label>
                        <textarea class="form-control" id="comment" name="comment" rows="3" required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Submit Review</button>
                </form>
            </div>
        </div>

        <!-- Related Products -->
        <div class="related-products">
            <h4>Related Products</h4>
            <div class="row">
                <% relatedProducts.forEach(related => { %>
                    <div class="col-md-3 mb-4">
                        <div class="product-card">
                            <img src="<%= related.images[0] %>" alt="<%= related.name %>" class="img-fluid">
                            <h6><%= related.name %></h6>
                            <p class="text-muted"><%= related.brand %></p>
                            <p>₹<%= related.price %></p>
                            <a href="/products/<%= related._id %>" class="btn btn-primary">View Details</a>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>

        <% } %>
    </div>

    <%- include('../partials/user/footer') %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Add to Cart Function (unchanged)
        function addToCart(productId) {
            fetch(`/cart/add/${productId}`, { 
                method: 'POST',
                headers: { 'Content-Type': 'application/json' }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Product unavailable');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert('Added to cart!');
                    }
                })
                .catch(error => {
                    alert('Error: ' + error.message);
                    window.location.href = '/products?error=Product+unavailable+or+out+of+stock';
                });
        }
    
        // Rate Product Function (unchanged)
        function rateProduct(rating, productId) {
            fetch(`/products/${productId}/rate`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ rating })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Rating submitted!');
                        location.reload();
                    } else {
                        alert('Error submitting rating: ' + (data.message || 'Unknown error'));
                    }
                })
                .catch(error => alert('Error: ' + error.message));
        }
    
        // Submit Review Function (updated)
        function submitReview(event, productId) {
            event.preventDefault();
            const rating = document.getElementById('rating').value;
            const comment = document.getElementById('comment').value;
    
            fetch(`/products/${productId}/review`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ rating, comment })
            })
                .then(response => {
                    if (!response.ok) {
                        // If response is not OK, throw an error with the status text
                        return response.text().then(text => {
                            throw new Error(`Server responded with ${response.status}: ${text}`);
                        });
                    }
                    return response.json(); // Parse JSON if response is OK
                })
                .then(data => {
                    if (data.success) {
                        alert('Review submitted!');
                        location.reload(); // Refresh to show new review
                    } else {
                        alert('Error submitting review: ' + (data.message || 'Unknown error'));
                    }
                })
                .catch(error => {
                    console.error('Fetch error:', error);
                    alert('Error submitting review: ' + error.message);
                });
        }
    </script>
</body>
</html>